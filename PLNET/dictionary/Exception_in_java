<!doctype html>
<html>
  <head>
    <!-- Required meta tags -->
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">   
    <link rel="shortcut icon" href="/resource/img/logo.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
    <link rel="stylesheet" href="/resource/highlight/styles/vs2015.css">
    <link rel="stylesheet" href="/resource/custom.css">
    <title></title>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-109032729-5"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-109032729-5');
    </script>
  </head>
  <body>
    <header>
  <nav class="navbar bg-light bg-light">
    <a class="navbar-brand" href="/">
      <img src="/resource/img/logo.png" height="28"/>
      PLNET
    </a>
    <form id="search_form">
      <input type="text" id="search_text"/>
      <button type="submit" class="btn btn-primary" id="search_button">Search...</button>
    </form>
    <a class="btn btn-primary" href="/login" role="button">Login</a>
  </nav>
</header>

    <main><div class='container-fluid' id='dict_container'>
      <h1><span class='badge badge-primary'>exception in Java</span></h1>
      <div class='container-fluid'>
          <pre id='word_content' style='white-space: pre-wrap;'>&lt;b&gt;Hierarchy of exceptions&lt;/b&gt;
* java.lang.Object
    * java.lang.Throwable
        * java.lang.Error: This is runtime error actually. An error is fatal and should not be caught by the program. While it is legal to catch an error, it is not a good practice.
        * java.lang.Exception
            * java.lang.RuntimeException. Occurs during the execution of the program, hence they are also referred to as runtime exceptions. These exceptions are not checked while compiling the program; also known as Unchecked exceptions.  
           * Checked exceptions. Also known as compile-time exceptions as these exceptions are checked during the compilation process to confirm handled by the programmer or not. If not, then the system displays a compilation error. 

&lt;b&gt;Type of exceptions&lt;/b&gt;
Type | Thrown by | Hierarchy | Recommeded to catch | Required to catch
----- | ----- | ----- | ----- | ----- 
Runtime exception | both the JVM and programmer code | RuntimeException or its subclasses | Yes | No
Checked exception | programmer code | Exception or its subclasses but not RuntimeException or its subclasses | Yes | Yes
Error | JVM | Error or its subclasses | No | No

&lt;b&gt;Checked exceptions&lt;/b&gt;
Checked exception | Used when
----- | -----
java.text.ParseException | Converting a String to a number.
java.io.IOException&lt;br&gt;java.io.FileNotFound Exception&lt;br&gt;java.io.NotSerializable Exception | Dealing with IO and NIO.2 issues. IOException is the parent class. There are a number of subclasses. You can assume any java.io exception is checked.
java.sql.SQLException | Dealing with database issues. SQLException is the parent class. Again, you can assume any java.sql exception is checked.

&lt;b&gt;Runtime exceptions&lt;/b&gt;
Runtime exception | Used when
----- | -----
java.lang.ArithmeticException | Thrown by the JVM when code attempts to divide by zero.
java.lang.ArrayStoreException | Trying to store the wrong data type in an array.
java.lang.ArrayIndexOutOfBoundsException | Trying to retrive a &quot;box&quot; that does not exist, by passing an index that is higher than the index of last &quot;box&quot;, or negative.
java.lang.ClassCastException | Thrown by the JVM when an attempt is made to cast an object to a subclass of which it is not an instance.
java.lang.IllegalArgumentException | Thrown by the program to indicate that a method has been passed an illegal or inappropriate argument.
java.lang.IllegalStateException&lt;br&gt;java.lang.UnsupportedOperationException | Attempting to run an invalid operation in collections and concurrency.
java.lang.NegativeArraySizeException | Trying to initialize an array with a negative length. 
java.lang.NullPointerException | Thrown by the JVM when there is a null reference where an object is required.
java.lang.NumberFormatException | Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format. 
java.time.DateTimeException | Receiving an invalid format string for a date.
java.util.MissingResourceException | Trying to access a key or resource bundle that does not exist.

When creating your own exception, you need to decide whether it should be a checked or unchecked exception. While you can extend any exception class, it is most common to extend Exception (for checked) or RuntimeException (for unchecked.)
Always throw an Exception (never a Throwable). You generally don&#039;t catch Throwable either, but you can. Throwable is the superclass to Exception and Error, so you would catch Throwable if you wanted to not only catch Exceptions but Errors, that&#039;s the point in having it. The thing is, Errors are generally things which a normal application wouldn&#039;t and shouldn&#039;t catch, so just use Exception unless you have a specific reason to use Throwable.
```
public class CannotSwimException extends Exception {
    public CannotSwimException() {
        super();
    }
    public CannotSwimException(Exception e) {
        super(e);
    }
    public CannotSwimException(String message) {
        super(message);
    }
}
```
</pre>
      </div>
      <div class='btn-group-vertical text-left'>
    <button type='button' class='btn btn-light'><b>Superconcept: </b><a href='/dictionary/Exception'>Exception</a></button><button type='button' class='btn btn-light'><b>Subconcept: </b><a href='/dictionary/Checked_exception_in_java'>Checked exception in java</a>, <a href='/dictionary/Error_in_java'>Error in java</a>, <a href='/dictionary/Nullpointerexception'>Nullpointerexception</a></button><button type='button' class='btn btn-light'><b>Subcategory: </b><a href='/dictionary/Exception_handling_in_java'>Exception handling in java</a>, <a href='/dictionary/Throws_keyword_in_java'>Throws keyword in java</a>, <a href='/dictionary/Throw_keyword_in_java'>Throw keyword in java</a></button>
      </div><br/>
    <div class='container-fluid'>  <a class='btn btn-primary' href="/" role='button'>Home</a>  <a class='btn btn-primary' data-href="/action/edit/exception_in_Java" href='placeholder' id='word_edit' role='button'>Edit</a></div></div></main>
    <footer>
    <script>
        document.getElementById("year").innerHTML = new Date().getFullYear();
    </script>
    <div class="text-center text-primary">  
	    <a href="/">plnet.com 2018 - 
            <script>
                var CurrentYear = new Date().getFullYear()
                document.write(CurrentYear)
            </script>
        </a>
	</div> 
</footer> 

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.2.3/mermaid.min.js"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/showdown/1.9.0/showdown.min.js'></script>
    <script src="/resource/highlight/highlight.pack.js"></script>
    <script src="/client/src/app/main.js" type="module"></script>
  </body>
</html>
