<!doctype html>
<html>
  <head>
    <!-- Required meta tags -->
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">   
    <link rel="shortcut icon" href="/resource/img/logo.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
    <link rel="stylesheet" href="/resource/highlight/styles/vs2015.css">
    <link rel="stylesheet" href="/resource/custom.css">
    <title></title>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-109032729-5"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-109032729-5');
    </script>
  </head>
  <body>
    <header>
  <nav class="navbar bg-light bg-light">
    <a class="navbar-brand" href="/">
      <img src="/resource/img/logo.png" height="28"/>
      PLNET
    </a>
    <form id="search_form">
      <input type="text" id="search_text"/>
      <button type="submit" class="btn btn-primary" id="search_button">Search...</button>
    </form>
    <a class="btn btn-primary" href="/login" role="button">Login</a>
  </nav>
</header>

    <main><div class='container-fluid' id='dict_container'>
      <h1><span class='badge badge-primary'>predicate in Java</span></h1>
      <div class='container-fluid'>
          <pre id='word_content' style='white-space: pre-wrap;'>A Predicate interface represents a boolean-valued-function of an argument. This is mainly used to filter data from a Java Stream. The filter method of a stream accepts a predicate to filter the data and return a new stream satisfying the predicate. 
A predicate has a test() method which accepts an argument and returns a boolean value.
```
import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;

public class Main {
    public static void main(String[] args) {
        List&lt;String&gt; names = Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;d&quot;, &quot;ae&quot;);
        Predicate&lt;String&gt; nameStartsWithS = str -&gt; str.startsWith(&quot;a&quot;);
        names.stream().filter(nameStartsWithS).forEach(System.out::println);
    }
}
```
Predicate also provides a few default and static method for composition and other purposes:
```
default Predicate&lt;T&gt; and(Predicate&lt;? super T&gt; other);
default Predicate&lt;T&gt; or(Predicate&lt;? super T&gt; other);
static &lt;T&gt; Predicate&lt;T&gt; isEquals(Object targetRef);
default Predicate&lt;T&gt; negate();
```
Following example demonstrates to use and method to compose predicates with multiple predicates.
```
import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;

public class Main {
    public static void main(String[] args) {
        List&lt;String&gt; names = Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;d&quot;, &quot;aeb&quot;);
        Predicate&lt;String&gt; startPredicate = str -&gt; {return str.startsWith(&quot;a&quot;); };
        Predicate&lt;String&gt; endPredicate = (str) -&gt; str.endsWith(&quot;b&quot;);
        names.stream().filter(startPredicate.and(endPredicate)).forEach(System.out::println);
        // ab
        // aeb
    }
}
```

</pre>
      </div>
      <div class='btn-group-vertical text-left'>
    <button type='button' class='btn btn-light'><b>Supercategory: </b><a href='/dictionary/Functional_interface_in_java'>Functional interface in java</a></button>
      </div><br/>
    <div class='container-fluid'>  <a class='btn btn-primary' href="/" role='button'>Home</a>  <a class='btn btn-primary' data-href="/action/edit/predicate_in_Java" href='placeholder' id='word_edit' role='button'>Edit</a></div></div></main>
    <footer>
    <script>
        document.getElementById("year").innerHTML = new Date().getFullYear();
    </script>
    <div class="text-center text-primary">  
	    <a href="/">plnet.com 2018 - 
            <script>
                var CurrentYear = new Date().getFullYear()
                document.write(CurrentYear)
            </script>
        </a>
	</div> 
</footer> 

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.2.3/mermaid.min.js"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/showdown/1.9.0/showdown.min.js'></script>
    <script src="/resource/highlight/highlight.pack.js"></script>
    <script src="/client/src/app/main.js" type="module"></script>
  </body>
</html>
