<!doctype html>
<html>
  <head>
    <!-- Required meta tags -->
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">   
    <link rel="shortcut icon" href="/resource/img/logo.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
    <link rel="stylesheet" href="/resource/highlight/styles/vs2015.css">
    <link rel="stylesheet" href="/resource/custom.css">
    <title></title>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-109032729-5"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-109032729-5');
    </script>
  </head>
  <body>
    <header>
  <nav class="navbar bg-light bg-light">
    <a class="navbar-brand" href="/">
      <img src="/resource/img/logo.png" height="28"/>
      PLNET
    </a>
    <form id="search_form">
      <input type="text" id="search_text"/>
      <button type="submit" class="btn btn-primary" id="search_button">Search...</button>
    </form>
    <a class="btn btn-primary" href="/login" role="button">Login</a>
  </nav>
</header>

    <main><div class='container-fluid' id='dict_container'>
      <h1><span class='badge badge-primary'>dictionary in Kotlin</span></h1>
      <div class='container-fluid'>
          <pre id='word_content' style='white-space: pre-wrap;'>Map&lt;K, V&gt; is not an inheritor of the Collection interface; however, it&#039;s a Kotlin collection type as well. A Map stores key-value pairs (or entries); keys are unique, but different keys can be paired with equal values. The Map interface provides specific functions, such as access to value by key, searching keys and values, and so on.
```
val numbersMap = mapOf(&quot;key1&quot; to 1, &quot;key2&quot; to 2, &quot;key3&quot; to 3, &quot;key4&quot; to 1)

println(&quot;All keys: ${numbersMap.keys}&quot;)
println(&quot;All values: ${numbersMap.values}&quot;)
if (&quot;key2&quot; in numbersMap) println(&quot;Value by key \&quot;key2\&quot;: ${numbersMap[&quot;key2&quot;]}&quot;)    
if (1 in numbersMap.values) println(&quot;The value 1 is in the map&quot;)
if (numbersMap.containsValue(1)) println(&quot;The value 1 is in the map&quot;) // same as previous
```
Two maps containing the equal pairs are equal regardless of the pair order.
```
val numbersMap = mapOf(&quot;key1&quot; to 1, &quot;key2&quot; to 2, &quot;key3&quot; to 3, &quot;key4&quot; to 1)    
val anotherMap = mapOf(&quot;key2&quot; to 2, &quot;key1&quot; to 1, &quot;key4&quot; to 1, &quot;key3&quot; to 3)

println(&quot;The maps are equal: ${numbersMap == anotherMap}&quot;
```
MutableMap is a Map with map write operations, for example, you can add a new key-value pair or update the value associated with the given key.
```
val numbersMap = mutableMapOf(&quot;one&quot; to 1, &quot;two&quot; to 2)
numbersMap.put(&quot;three&quot;, 3)
numbersMap[&quot;one&quot;] = 11

println(numbersMap)
```
The default implementation of Map – LinkedHashMap – preserves the order of elements insertion when iterating the map. In turn, an alternative implementation – HashMap – says nothing about the elements order.
</pre>
      </div>
      <div class='btn-group-vertical text-left'>
    <button type='button' class='btn btn-light'><b>Superconcept: </b><a href='/dictionary/Composite_data_type_in_kotlin'>Composite data type in kotlin</a>, <a href='/dictionary/Dictionary'>Dictionary</a></button>
      </div><br/>
    <div class='container-fluid'>  <a class='btn btn-primary' href="/" role='button'>Home</a>  <a class='btn btn-primary' data-href="/action/edit/dictionary_in_Kotlin" href='placeholder' id='word_edit' role='button'>Edit</a></div></div></main>
    <footer>
    <script>
        document.getElementById("year").innerHTML = new Date().getFullYear();
    </script>
    <div class="text-center text-primary">  
	    <a href="/">plnet.com 2018 - 
            <script>
                var CurrentYear = new Date().getFullYear()
                document.write(CurrentYear)
            </script>
        </a>
	</div> 
</footer> 

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.2.3/mermaid.min.js"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/showdown/1.9.0/showdown.min.js'></script>
    <script src="/resource/highlight/highlight.pack.js"></script>
    <script src="/client/src/app/main.js" type="module"></script>
  </body>
</html>
